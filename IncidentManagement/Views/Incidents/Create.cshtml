@model IncidentManagement.Models.Incident
@using System.Linq;
@using System.Data.Entity;

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@using (Html.BeginForm("Create", "Incidents", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <br>
    <div class="table-bordered" style="width:900px">
        <div class="panel-heading" align="center" style="height:30PX;background-color:#FFA500;color:white; vertical-align:top">REGISTER NEW TICKET</div>
        <div class="form-horizontal" style="color:gray;padding-top:20px;">
            <div class="form-group">
                @Html.Label("Request Type", htmlAttributes: new { @class = "control-label col-lg-2" })

                <div class="col-lg-5">
                    @Html.DropDownListFor(model => model.RequestType, new List<SelectListItem>
                    {
                        new SelectListItem {Text="Incident Request", Value="Incident Request"},
                        new SelectListItem {Text="Development Change Request", Value="Development Request"}

                    }, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Application", htmlAttributes: new { @class = "control-label col-lg-2" })

                <div class="col-lg-5">
                    @Html.DropDownListFor(model => model.TestCategory, new List<SelectListItem>
                {
                    new SelectListItem {Text="JMS", Value="JMS"},
                    new SelectListItem {Text="Inventory Control", Value="Inventory Control"},
                    new SelectListItem {Text="Inventory Control Mobile", Value="Inventory Control Mobile"},
                    new SelectListItem {Text="Blancco", Value="Blancco"},
                    new SelectListItem {Text="DOCS Online", Value="DOCS Online"},
                    new SelectListItem {Text="Payment Portal", Value="Payment Portal"},
                    new SelectListItem {Text="Remediation", Value="Remediation"},
                    new SelectListItem {Text="Remediation", Value="TechAssistTickets"},
                    new SelectListItem {Text="IT-Desktop Support", Value="IT-Desktop Support"} }
                    , new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("User Name *", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Orders*", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", placeholder = "DispatchNO, JobNo, LoadNo" } })
                    @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.Label("Email *", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Ticket Details *", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    @Html.EditorFor(model => model.TestDetails, new { htmlAttributes = new { @class = "form-control", rows = 8, @cols = 5, placeholder = "Issue Details Here, Large No of SSN's Please Attach a File." } })
                    @Html.ValidationMessageFor(model => model.TestDetails, " ", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    @Html.DropDownListFor(model => model.Location, new List<SelectListItem>
               {
                   new SelectListItem {Text="SYDNEY", Value="SYDNEY"},
                   new SelectListItem {Text="MELBOURNE", Value="MELBOURNE"},
                   new SelectListItem {Text="CANBERRA", Value="CANBERRA"},
                   new SelectListItem {Text="BRISBANE", Value="BRISBANE"},
                   new SelectListItem {Text="PERTH", Value="PERTH"}
               }, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("FeedBack Source", htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">

                    @Html.DropDownListFor(model => model.FeedBackSource, new List<SelectListItem>
             {
                 new SelectListItem {Text="Warehouse", Value="Warehouse"},
                 new SelectListItem {Text="Project Management", Value="Project Management"},
                 new SelectListItem {Text="Finance", Value="Finance"},
                  new SelectListItem {Text="Sales", Value="Sales"},
                  new SelectListItem {Text="Business Support", Value="Business Support"},
                  new SelectListItem {Text="Other", Value="Other"}
             }, new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-lg-2" })
                <div class="col-lg-5">
                    @Html.DropDownListFor(model => model.Priority, new List<SelectListItem>
                 {
                     new SelectListItem {Text = "LOW", Value = "LOW"},
                     new SelectListItem {Text = "MEDIUM", Value = "MEDIUM"},
                     new SelectListItem {Text = "HIGH", Value = "HIGH"},
                     new SelectListItem {Text = "CRITICAL", Value = "CRITICAL"}
                 }, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="file" name="uploadfile" />
                    @Html.HiddenFor(model => model.FilePath)
                </div>
            </div>


            <div class="panel-footer primary" align="left" style="height:50px;vertical-align:top;">
                <input type="submit" name="submitButton" value="Create" class="btn btn-default btn-warning" />
                @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-warning btn-large" })
            </div>
        </div>

    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
